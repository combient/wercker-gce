build:
    box: combient/java-mvn
    steps:

    - script:
        name: show base information
        code: |
            mvn -v
            echo $JAVA_HOME
            java -version
            javac -version
    - script:
        name: copy start script
        code: |
           cp start.sh "$WERCKER_OUTPUT_DIR"
           chmod u+x "$WERCKER_OUTPUT_DIR"/start.sh
    - script:
        name: maven package
        code: |
            mvn -Dmaven.repo.local=$WERCKER_CACHE_DIR package
deploy:
    box: google/cloud-sdk
    steps:
    - script:
        name: install jq
        code: wget -O /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5rc1/jq-linux-x86_64-static && chmod a+x /usr/local/bin/jq
    - script:
        name: Google cloud authentication
        code: |
            google/cloud-sdk gcloud init
            gcloud auth activate-refresh-token $GCLOUD_ACCOUNT $GCLOUD_REFRESH_TOKEN
            gcloud docker --authorize-only
            gcloud config set compute/zone $GCLOUD_COMPUTEZONE
            gcloud config set project $GCLOUD_PROJECT
            gcloud container clusters get-credentials $GCLOUD_GCE_CLUSTER
            export GCR_AUTH_TOKEN=$(cat $HOME/.dockercfg | jq --raw-output '.["https://gcr.io"].auth' | base64 --decode | cut -d ':' -f2)
    - script:
          name: Google cloud information
          code: |
              gcloud info
              gcloud components list
              kubectl describe no
              kubectl get rc
    - internal/docker-push:
        username: _token
        password: $GCR_AUTH_TOKEN
        tag: $WERCKER_GIT_COMMIT
        cmd: ./start.sh
        ports: "8080"
        repository: $GCLOUD_REPOSITORY
        registry: $GCLOUD_REGISTRY
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: false
        command: rolling-update Commit $WERCKER_GIT_COMMIT to $KUBERNETES_MASTER
        image: $GCLOUD_REPOSITORY:$WERCKER_GIT_COMMIT
